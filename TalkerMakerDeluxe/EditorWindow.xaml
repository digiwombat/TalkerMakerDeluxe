<Window x:Name="EditorWin" x:Class="TalkerMakerDeluxe.EditorWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:TalkerMakerDeluxe"
		mc:Ignorable="d"
		xmlns:fa="http://schemas.fontawesome.io/icons/" xmlns:TreeContainer="clr-namespace:TreeContainer;assembly=TreeContainer"
		Title="TalkerMaker Deluxe" Height="800" MinHeight="575" MinWidth="600" Width="1200" AllowDrop="True" Drop="MetroWindow_Drop"
	SizeToContent="Manual" ResizeMode="CanResizeWithGrip"
	Closing="MetroWindow_Closing" FontFamily="Roboto" DataContext="{Binding theDatabase, ElementName=EditorWin}" MouseUp="ScrollViewer_MouseUp">
	<Window.Resources>
		<local:UriToBitmapConverter x:Key="UriToBitmapConverter" />
		<local:Actor x:Key="CharacterItems" />
		<Style TargetType="ListBoxItem">
			<Setter Property="local:SelectOnInternalClick.Enable" Value="true"/>
		</Style>
		<Style TargetType="{x:Type ComboBox}" x:Key="ComboBoxStyle">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBox}">
						<Grid UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
							<ToggleButton x:Name="ToggleButton" Background="{DynamicResource AccentColorBrush3}" ClickMode="Press" Grid.Column="2" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
								<ToggleButton.Template>
									<ControlTemplate TargetType="{x:Type ToggleButton}">
										<Grid UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
											<Grid.ColumnDefinitions>
												<ColumnDefinition/>
												<ColumnDefinition Width="20"/>
											</Grid.ColumnDefinitions>
											<Border x:Name="Border" BorderThickness="1" Background="#FF585858" Grid.ColumnSpan="2" CornerRadius="4" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
												<Border.BorderBrush>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.9">
														<GradientStop Color="Black" Offset="1"/>
														<GradientStop Color="#FF2a2a2a" Offset="0"/>
													</LinearGradientBrush>
												</Border.BorderBrush>
											</Border>
											<Border x:Name="ButtonBorder" BorderBrush="#FF444444" BorderThickness="0" Grid.Column="1" Margin="1" UseLayoutRounding="True" d:DesignUseLayoutRounding="True" Background="{x:Null}"/>
											<Path x:Name="Arrow" Grid.Column="1" Data="M 0 0 L 4 4 L 8 0 Z" Fill="#FF2a2a2a" HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center" d:DesignUseLayoutRounding="True"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
											</Trigger>
											<Trigger Property="IsChecked" Value="True">
												<Setter Property="Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
												<Setter Property="Fill" TargetName="Arrow" Value="#FF8D979E"/>
											</Trigger>
											<Trigger Property="IsEnabled" Value="False">
												<Setter Property="Background" TargetName="Border" Value="#FFEEEEEE"/>
												<Setter Property="Background" TargetName="ButtonBorder" Value="#FFEEEEEE"/>
												<Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#FF888888"/>
												<Setter Property="Foreground" Value="#FF888888"/>
												<Setter Property="Fill" TargetName="Arrow" Value="#FF999999"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</ToggleButton.Template>
							</ToggleButton>
							<ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" HorizontalAlignment="Left" IsHitTestVisible="False" Margin="5,3,23,3" UseLayoutRounding="True" VerticalAlignment="Center" d:DesignUseLayoutRounding="True"/>
							<TextBox x:Name="PART_EditableTextBox" Background="Transparent" Focusable="True" HorizontalAlignment="Left" InputMethod.IsInputMethodEnabled="False" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="0,0,23,0" UseLayoutRounding="True" Visibility="Hidden" VerticalAlignment="Center" d:DesignUseLayoutRounding="True" FontSize="11" FontWeight="Normal" VerticalContentAlignment="Center">
								<TextBox.Template>
									<ControlTemplate TargetType="{x:Type TextBox}">
										<Border x:Name="PART_ContentHost" Focusable="False" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
									</ControlTemplate>
								</TextBox.Template>
							</TextBox>
							<Popup x:Name="Popup" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="Slide" Placement="Bottom">
								<Grid x:Name="DropDown" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
									<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource AccentColorBrush5}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" CornerRadius="0" Margin="0,1,0,0" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
									<ScrollViewer Margin="4" SnapsToDevicePixels="True" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
										<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasItems" Value="False">
								<Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="#FF888888"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="True">
								<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
							</Trigger>
							<Trigger Property="IsEditable" Value="True">
								<Setter Property="IsTabStop" Value="False"/>
								<Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
								<Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBoxBase}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="MinWidth" Value="120"/>
			<Setter Property="MinHeight" Value="20"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="Foreground" Value="{StaticResource GrayBrush2}"/>
			<Setter Property="CaretBrush" Value="{StaticResource GrayBrush2}"/>
			<Setter Property="FontWeight" Value="Normal"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBoxBase}">
						<Border x:Name="Border" BorderThickness="1" Background="#FF2A2A2A" Padding="2" UseLayoutRounding="True" d:DesignUseLayoutRounding="True" CornerRadius="2">
							<Border.BorderBrush>
								<LinearGradientBrush EndPoint="0.5,0.1" StartPoint="0.5,0">
									<GradientStop Color="Black" Offset="0"/>
									<GradientStop Color="#FF1f1f1f" Offset="1"/>
								</LinearGradientBrush>
							</Border.BorderBrush>
							<ScrollViewer x:Name="PART_ContentHost" Foreground="Silver" Margin="0" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ContextMenu}">
						<Border Background="#F0222120" BorderBrush="{DynamicResource GrayBrush1}" BorderThickness="2" Opacity="1">
							<StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type TabItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid>
							<Border 
								Name="Border"
								Background="{DynamicResource GrayBrush3}"
								BorderBrush="{DynamicResource ButtonNormalBorder}">
								<ContentPresenter x:Name="ContentSite"
									VerticalAlignment="Center"
									HorizontalAlignment="Center"
									ContentSource="Header"
									Margin="12,2,12,2"
									RecognizesAccessKey="True"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Panel.ZIndex" Value="100" />
								<Setter TargetName="Border" Property="Background" Value="{StaticResource WindowTitleColorBrush}" />
								<Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
								<Setter TargetName="Border" Property="CornerRadius" Value="2" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxDisabledBorderBrush}" />
								<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentColorBrush2}" />
								<Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
	<Window.CommandBindings>
		<CommandBinding Command="New" Executed="NewBinding_Executed" />
		<CommandBinding Command="Save" Executed="Save_Binding" />
		<CommandBinding Command="SaveAs" Executed="SaveAs_Binding" />
		<CommandBinding Command="Open" Executed="Open_Binding" />
		<CommandBinding Command="Close" Executed="Exit_Binding" />
	</Window.CommandBindings>
	<Window.InputBindings>
		<KeyBinding Key="N" Modifiers="Control" Command="New"/>
		<KeyBinding Key="O" Modifiers="Control" Command="Open"/>
		<KeyBinding Key="S" Modifiers="Control" Command="Save"/>
		<KeyBinding Key="S" Modifiers="Control+Shift" Command="SaveAs"/>
		<KeyBinding Key="W" Modifiers="Control" Command="Close"/>
	</Window.InputBindings>
	<Grid Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*" />
			<RowDefinition Height="30" />
		</Grid.RowDefinitions>
		<Menu Grid.Row="0" VerticalAlignment="Top" Grid.ColumnSpan="1000" Background="{DynamicResource GrayBrush1}"  Foreground="{DynamicResource BlackBrush}">
			<MenuItem x:Name="menuItem" Header="_File">
				<MenuItem Name="menuNew" Header="_New Project" Command="New" Foreground="Black">
					<MenuItem.Icon>
						<fa:FontAwesome Icon="FileCodeOutline" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Name="menuOpen" Header="_Open Project" Command="Open" Foreground="Black">
					<MenuItem.Icon>
						<fa:FontAwesome Icon="FolderOutlinepenOutline" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Name="menuSave" Header="_Save Project"  Command="Save" Foreground="Black">
					<MenuItem.Icon>
						<fa:FontAwesome Icon="Save" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Name="menuSaveAs" Header="S_ave Project As..."  Command="SaveAs" Foreground="Black">
					<MenuItem.Icon>
						<fa:FontAwesome Icon="Save" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Name="menuExport" Header="Export to Dialogue System XML" Click="menuExport_Click" Foreground="Black" >
					<MenuItem.Icon>
						<fa:FontAwesome Icon="ShareSquareOutline" />
					</MenuItem.Icon>
				</MenuItem>
				<local:RecentFileList x:Name="mnuRecent" MaxNumberOfFiles="3" />
				<MenuItem Name="menuExit" Header="_Exit" Command="Close" Foreground="Black" />
			</MenuItem>
			<MenuItem Header="_Edit">
				<MenuItem Name="menuUndo" Header="Undo" Command="Undo" Foreground="Black" />
				<MenuItem Name="menuRedo" Header="Redo" Command="Redo" Foreground="Black" />
			</MenuItem>
			<MenuItem Header="_View">
				<MenuItem Name="menuExpand" Header="Expand All" Click="menuExpand_Click" Foreground="Black" />
				<MenuItem Name="menuCollapse" Header="Collapse All" Click="menuExpand_Click" Foreground="Black" />
				<Separator />
				<MenuItem Name="menuLinks" Header="Show All Links" Click="menuLinks_Click" IsChecked="True" IsCheckable="True" Foreground="Black" />
			</MenuItem>
		</Menu>
		<DockPanel Grid.Row="1" Margin="0,0,0,0">
			<TabControl x:Name="tabMain" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{x:Null}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" FontSize="14" FontWeight="Bold" Margin="0" Padding="0" ScrollViewer.CanContentScroll="True">
				<TabControl.Resources>
					<Style TargetType="{x:Type TabPanel}">
						<Setter Property="HorizontalAlignment" Value="Center" />
					</Style>
					<Style  TargetType="{x:Type TabControl}" BasedOn="{StaticResource {x:Type TabControl}}">
						<Setter Property="OverridesDefaultStyle" Value="True" />
						<Setter Property="SnapsToDevicePixels" Value="True" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type TabControl}">
									<Grid KeyboardNavigation.TabNavigation="Local" HorizontalAlignment="Stretch">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="*"/>
										</Grid.RowDefinitions>
										<Border BorderThickness="2" BorderBrush="{DynamicResource GrayBrush3}" Background="{DynamicResource GrayBrush3}" Padding="5" HorizontalAlignment="Stretch" Margin="0">
											<TabPanel Name="HeaderPanel"
										  Grid.Row="0"
										  Panel.ZIndex="1"
										  IsItemsHost="True"
										  KeyboardNavigation.TabIndex="1"
										  HorizontalAlignment="Center"/>
										</Border>
										<ContentPresenter x:Name="PART_SelectedContentHost"
							  Margin="4" Grid.Row="1"
							  ContentSource="SelectedContent" />
									</Grid>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</TabControl.Resources>
				<TabItem Header="Characters" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderBrush="{DynamicResource ButtonNormalBorder}" BorderThickness="1,1,1,8" Margin="0" FontSize="12">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="3*"/>
							<ColumnDefinition Width="5"/>
							<ColumnDefinition Width="1*"/>
						</Grid.ColumnDefinitions>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" MinHeight="50" />
								<RowDefinition Height="50" />
							</Grid.RowDefinitions>
							<ScrollViewer Grid.Row="0" Padding="0" VerticalScrollBarVisibility="Auto">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="40" />
										<ColumnDefinition Width="1*" />
										<ColumnDefinition Width="3*" />
									</Grid.ColumnDefinitions>
									<TextBlock Grid.Row="0" Grid.Column="1" Margin="10,0,0,0" FontWeight="Normal">Name</TextBlock>
									<TextBlock Grid.Row="0" Grid.Column="2" FontWeight="Normal">Description</TextBlock>

									<Border Grid.ColumnSpan="3" Margin="15,15,15,0" Background="{DynamicResource GrayBrush3}" CornerRadius="4" BorderThickness="1">
										<ListBox Padding="0" x:Name="lstCharacters" ItemsSource="{Binding Actors}" Background="{x:Null}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderBrush="{x:Null}" IsSynchronizedWithCurrentItem="True" BorderThickness="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Top" Margin="5" >
											<ListBox.ItemContainerStyle>
												<Style TargetType="ListBoxItem">
													<Style.Resources>
														<Style TargetType="Border">
															<Setter Property="CornerRadius" Value="4"/>
														</Style>
													</Style.Resources>
												</Style>
											</ListBox.ItemContainerStyle>
											<ListBox.ContextMenu>
												<ContextMenu>
													<MenuItem x:Name="mnuDeleteCharacter" Header="Delete Character" Click="mnuDeleteCharacter_Click" />
												</ContextMenu>
											</ListBox.ContextMenu>
											<ListBox.ItemTemplate>
												<DataTemplate>
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="20" />
															<ColumnDefinition Width="1*" />
															<ColumnDefinition Width="3*" />
														</Grid.ColumnDefinitions>
														<fa:ImageAwesome Grid.Column="0" Icon="EllipsisH" Width="15" Height="15" Foreground="#FF585858" />
														<TextBox Grid.Column="1" Text="{Binding Path=name}"  Name="lblActorName" Margin="2,1,2,1" />
														<TextBox Grid.Column="2" Text="{Binding Path=description}" Name="lblActorID" Margin="0,1,10,1" />
													</Grid>
												</DataTemplate>
											</ListBox.ItemTemplate>
										</ListBox>
									</Border>
								</Grid>
							</ScrollViewer>
							<Border Grid.Row="1" Padding="10,6,10,10" HorizontalAlignment="Right" Margin="0,-2,50,0" VerticalAlignment="Top" Background="{DynamicResource GrayBrush3}" CornerRadius="0,0,4,4">
								<StackPanel Orientation="Horizontal" Margin="0" VerticalAlignment="Top" Background="{DynamicResource GrayBrush3}">
									<Button fa:Awesome.Content="Plus" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="24" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderThickness="0" FontWeight="Bold" Height="24" Click="btnAddCharacter_Click">
										<Button.Style>
											<Style TargetType="{x:Type Button}">
												<Setter Property="Background" Value="Transparent"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Button}">
															<Border Background="{TemplateBinding Background}">
																<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
															</Border>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Background" Value="#FF2a2a2a"/>
													</Trigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>
									<Button fa:Awesome.Content="Minus" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="24" BorderThickness="0" FontWeight="Bold" Click="mnuDeleteCharacter_Click">
										<Button.Style>
											<Style TargetType="{x:Type Button}">
												<Setter Property="Background" Value="Transparent"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Button}">
															<Border Background="{TemplateBinding Background}">
																<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
															</Border>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Background" Value="#FF2a2a2a"/>
													</Trigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>

								</StackPanel>
							</Border>
						</Grid>
						<GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Background="{DynamicResource ButtonNormalBorder}" BorderThickness="3,0,0,0" Margin="0,15" />
						<Border Grid.Column="2"  Margin="15" Padding="10" Background="{DynamicResource GrayBrush3}" CornerRadius="4">
							<Border.Style>
								<Style>
									<Setter Property="Border.Visibility"  Value="Visible" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding ElementName=lstCharacters, Path=SelectedIndex}" Value="-1">
											<Setter Property="Border.Visibility" Value="Hidden" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Border.Style>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition  Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>

								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<Label Grid.Row="0" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">ID</Label>
								<TextBlock Grid.Row="0" Grid.Column="1" Margin="4,0,4,4" TextAlignment="Left" Text="{Binding SelectedItem.ID, ElementName=lstCharacters}" Name="txtActorID" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" HorizontalAlignment="Left" VerticalAlignment="Center" />

								<Label Grid.Row="1" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" VerticalContentAlignment="Center" HorizontalAlignment="Left">Name</Label>
								<TextBox Grid.Row="1" Grid.Column="1" Margin="4,0,4,4" Text="{Binding SelectedItem.name, ElementName=lstCharacters}" Name="txtActorName" Background="{DynamicResource GrayBrush1}" VerticalAlignment="Top" />

								<Label Grid.Row="2" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Age</Label>
								<TextBox Grid.Row="2" Grid.Column="1" Margin="4,0,4,4" Text="{Binding SelectedItem.age, ElementName=lstCharacters}" Name="txtActorAge" Background="{DynamicResource GrayBrush1}" VerticalAlignment="Top" />

								<Label Grid.Row="3" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Center" FontWeight="Bold" HorizontalAlignment="Left">Gender</Label>
								<TextBox Grid.Row="3" Grid.Column="1" Margin="4,0,4,4" Text="{Binding SelectedItem.gender, ElementName=lstCharacters}" Name="txtActorGender" VerticalAlignment="Top" />

								<Label Grid.Row="4" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Is Player?</Label>
								<CheckBox Grid.Row="4" Grid.Column="1" Margin="4,0,4,4" IsChecked="{Binding SelectedItem.isPlayer, ElementName=lstCharacters}" Name="chkActorPlayer" Background="#FF585858" Foreground="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Center">
									<CheckBox.BorderBrush>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.95">
											<GradientStop Color="Black" Offset="1"/>
											<GradientStop Color="#FF2A2A2A" Offset="0"/>
										</LinearGradientBrush>
									</CheckBox.BorderBrush>
								</CheckBox>

								<Label Grid.Row="5" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Description</Label>
								<TextBox Grid.Row="5" Grid.Column="1" Margin="4,0,4,4" SpellCheck.IsEnabled="True" TextWrapping="Wrap" MinHeight="50" MaxHeight="200" VerticalScrollBarVisibility="Auto"
														  Text="{Binding SelectedItem.description, ElementName=lstCharacters}" Name="txtActorDescription" />

								<Label Grid.Row="6" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Picture</Label>
								<Grid Grid.Row="6" Grid.Column="1" Margin="4,0,4,4">
									<Image Name="imgActorPicture" DataContext="{Binding ElementName=lstCharacters}" Source="{Binding SelectedItem.picture}" HorizontalAlignment="Left" VerticalAlignment="Top" RenderOptions.BitmapScalingMode="HighQuality" MaxWidth="128" MaxHeight="128" />
									<Button Name="btnPicturePicker" Content="..." Width="25" Height="25" HorizontalAlignment="Right" VerticalAlignment="Top" Click="btnPicturePicker_Click" Background="#FF585858">
										<Button.Style>
											<Style TargetType="Button">
												<Setter Property="TextBlock.TextAlignment" Value="Center" />
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="Button">
															<Border CornerRadius="2" BorderThickness="1" Background="#FF585858" >
																<Border.BorderBrush>
																	<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.95">
																		<GradientStop Color="Black" Offset="1"/>
																		<GradientStop Color="#FF2A2A2A" Offset="0"/>
																	</LinearGradientBrush>
																</Border.BorderBrush>
																<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
															</Border>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Button.Style>
									</Button>
								</Grid>
							</Grid>
						</Border>
					</Grid>
				</TabItem>
				<TabItem Header="Items" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderBrush="{DynamicResource ButtonNormalBorder}" BorderThickness="1,1,1,8" Margin="0" FontSize="12">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="3*"/>
							<ColumnDefinition Width="5"/>
							<ColumnDefinition Width="1*"/>
						</Grid.ColumnDefinitions>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" MinHeight="50" />
								<RowDefinition Height="50" />
							</Grid.RowDefinitions>
							<ScrollViewer Grid.Row="0" Padding="0" VerticalScrollBarVisibility="Auto">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="40" />
										<ColumnDefinition Width="1*" />
										<ColumnDefinition Width="3*" />
									</Grid.ColumnDefinitions>
									<TextBlock Grid.Row="0" Grid.Column="1" Margin="10,0,0,0" FontWeight="Normal">Name</TextBlock>
									<TextBlock Grid.Row="0" Grid.Column="2" FontWeight="Normal">Description</TextBlock>
									<Border Grid.ColumnSpan="3" Margin="15,15,15,0" Background="{DynamicResource GrayBrush3}" CornerRadius="4" BorderThickness="1">
										<ListBox Padding="0" x:Name="lstItems" ItemsSource="{Binding Items}" Background="{x:Null}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" HorizontalContentAlignment="Stretch" BorderBrush="{x:Null}" Margin="5">
											<ListBox.ItemContainerStyle>
												<Style TargetType="ListBoxItem">
													<Style.Resources>
														<Style TargetType="Border">
															<Setter Property="CornerRadius" Value="4"/>
														</Style>
													</Style.Resources>
												</Style>
											</ListBox.ItemContainerStyle>
											<ListBox.ContextMenu>
												<ContextMenu>
													<MenuItem x:Name="mnuDeleteItem" Header="Delete Item" Click="mnuDeleteItem_Click" />
												</ContextMenu>
											</ListBox.ContextMenu>
											<ListBox.ItemTemplate>
												<DataTemplate>
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="20" />
															<ColumnDefinition Width="1*" />
															<ColumnDefinition Width="3*" />
														</Grid.ColumnDefinitions>
														<fa:ImageAwesome Grid.Column="0" Icon="EllipsisH" Width="15" Height="15" Foreground="#FF585858" />
														<TextBox Grid.Column="1" Text="{Binding Path=name}" Margin="2,1,2,1" />
														<TextBox Grid.Column="2" Text="{Binding Path=description}" Margin="0,1,10,1" />
													</Grid>
												</DataTemplate>
											</ListBox.ItemTemplate>
										</ListBox>
									</Border>
								</Grid>
							</ScrollViewer>
							<Border Grid.Row="1" Padding="10,6,10,10" HorizontalAlignment="Right" Margin="0,-2,50,0" VerticalAlignment="Top" Background="{DynamicResource GrayBrush3}" CornerRadius="0,0,4,4">
								<StackPanel Orientation="Horizontal" Margin="0" VerticalAlignment="Top" Background="{DynamicResource GrayBrush3}">
									<Button fa:Awesome.Content="Plus" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="24" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderThickness="0" FontWeight="Bold" Height="24" Click="btnAddItem_Click">
										<Button.Style>
											<Style TargetType="{x:Type Button}">
												<Setter Property="Background" Value="Transparent"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Button}">
															<Border Background="{TemplateBinding Background}">
																<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
															</Border>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Background" Value="#FF2a2a2a"/>
													</Trigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>
									<Button fa:Awesome.Content="Minus" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="24" BorderThickness="0" FontWeight="Bold" Click="mnuDeleteItem_Click">
										<Button.Style>
											<Style TargetType="{x:Type Button}">
												<Setter Property="Background" Value="Transparent"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Button}">
															<Border Background="{TemplateBinding Background}">
																<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
															</Border>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Background" Value="#FF2a2a2a"/>
													</Trigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>

								</StackPanel>
							</Border>
						</Grid>
						<GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Background="{DynamicResource ButtonNormalBorder}" BorderThickness="3,0,0,0" Margin="0,15" />
						<Border Grid.Column="2"  Margin="15" Padding="10" Background="{DynamicResource GrayBrush3}" CornerRadius="4">
							<Border.Style>
								<Style>
									<Setter Property="Border.Visibility"  Value="Visible" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding ElementName=lstItems, Path=SelectedIndex}" Value="-1">
											<Setter Property="Border.Visibility" Value="Hidden" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Border.Style>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition  Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>

								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<Label Grid.Row="0" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Name</Label>
								<TextBox Grid.Row="0" Grid.Column="1" Margin="4,0,4,4" Text="{Binding SelectedItem.name, ElementName=lstItems}" Name="txtItemName" HorizontalAlignment="Left" VerticalAlignment="Top" />
								<Label Grid.Row="1" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Description</Label>
								<TextBox Grid.Row="1" Grid.Column="1" Margin="4,0,4,4" Text="{Binding SelectedItem.description, ElementName=lstItems}" TextWrapping="Wrap" MinHeight="50" MaxHeight="200" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" Name="txtItemDescription" HorizontalAlignment="Left" VerticalAlignment="Top" />
								<Label Grid.Row="2" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">In Inventory</Label>
								<CheckBox Grid.Row="2" Grid.Column="1" Margin="4,0,4,4" IsChecked="{Binding SelectedItem.inInventory, ElementName=lstItems}" Name="chkItemInventory" Background="#FF585858" HorizontalAlignment="Left" VerticalAlignment="Center">
									<CheckBox.BorderBrush>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.95">
											<GradientStop Color="Black" Offset="1"/>
											<GradientStop Color="#FF2A2A2A" Offset="0"/>
										</LinearGradientBrush>
									</CheckBox.BorderBrush>
								</CheckBox>
							</Grid>
						</Border>
					</Grid>
				</TabItem>
				<TabItem Header="Locations" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderBrush="{DynamicResource ButtonNormalBorder}" BorderThickness="1,1,1,8" Margin="0" FontSize="12">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="3*"/>
							<ColumnDefinition Width="5"/>
							<ColumnDefinition Width="1*"/>
						</Grid.ColumnDefinitions>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" MinHeight="50" />
								<RowDefinition Height="50" />
							</Grid.RowDefinitions>
							<ScrollViewer Grid.Row="0" Padding="0" VerticalScrollBarVisibility="Auto">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="40" />
										<ColumnDefinition Width="1*" />
										<ColumnDefinition Width="3*" />
									</Grid.ColumnDefinitions>
									<TextBlock Grid.Row="0" Grid.Column="1" Margin="10,0,0,0" FontWeight="Normal">Name</TextBlock>
									<TextBlock Grid.Row="0" Grid.Column="2" FontWeight="Normal">Description</TextBlock>
									<Border Grid.ColumnSpan="3" Margin="15,15,15,0" Background="{DynamicResource GrayBrush3}" CornerRadius="4" BorderThickness="1">
										<ListBox Padding="0" x:Name="lstLocations" ItemsSource="{Binding Locations}" Background="{x:Null}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" HorizontalContentAlignment="Stretch" BorderBrush="{x:Null}" Margin="5">
											<ListBox.ItemContainerStyle>
												<Style TargetType="ListBoxItem">
													<Style.Resources>
														<Style TargetType="Border">
															<Setter Property="CornerRadius" Value="4"/>
														</Style>
													</Style.Resources>
												</Style>
											</ListBox.ItemContainerStyle>
											<ListBox.ContextMenu>
												<ContextMenu>
													<MenuItem x:Name="mnuDeleteLocation" Header="Delete Item" Click="mnuDeleteLocation_Click" />
												</ContextMenu>
											</ListBox.ContextMenu>
											<ListBox.ItemTemplate>
												<DataTemplate>
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="20" />
															<ColumnDefinition Width="1*" />
															<ColumnDefinition Width="3*" />
														</Grid.ColumnDefinitions>
														<fa:ImageAwesome Grid.Column="0" Icon="EllipsisH" Width="15" Height="15" Foreground="#FF585858" />
														<TextBox Grid.Column="1" Text="{Binding Path=name}"  Margin="2,1,2,1" />
														<TextBox Grid.Column="2" Text="{Binding Path=description}" Margin="0,1,10,1" />
													</Grid>
												</DataTemplate>
											</ListBox.ItemTemplate>
										</ListBox>
									</Border>
								</Grid>
							</ScrollViewer>
							<Border Grid.Row="1" Padding="10,6,10,10" HorizontalAlignment="Right" Margin="0,-2,50,0" VerticalAlignment="Top" Background="{DynamicResource GrayBrush3}" CornerRadius="0,0,4,4">
								<StackPanel Orientation="Horizontal" Margin="0" VerticalAlignment="Top" Background="{DynamicResource GrayBrush3}">
									<Button fa:Awesome.Content="Plus" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="24" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderThickness="0" FontWeight="Bold" Height="24" Click="btnAddLocation_Click">
										<Button.Style>
											<Style TargetType="{x:Type Button}">
												<Setter Property="Background" Value="Transparent"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Button}">
															<Border Background="{TemplateBinding Background}">
																<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
															</Border>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Background" Value="#FF2a2a2a"/>
													</Trigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>
									<Button fa:Awesome.Content="Minus" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="24" BorderThickness="0" FontWeight="Bold" Click="mnuDeleteLocation_Click">
										<Button.Style>
											<Style TargetType="{x:Type Button}">
												<Setter Property="Background" Value="Transparent"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Button}">
															<Border Background="{TemplateBinding Background}">
																<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
															</Border>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Background" Value="#FF2a2a2a"/>
													</Trigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>

								</StackPanel>
							</Border>
						</Grid>
						<GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Background="{DynamicResource ButtonNormalBorder}" BorderThickness="3,0,0,0" Margin="0,15" />
						<Border Grid.Column="2"  Margin="15" Padding="10" Background="{DynamicResource GrayBrush3}" CornerRadius="4">
							<Border.Style>
								<Style>
									<Setter Property="Border.Visibility"  Value="Visible" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding ElementName=lstLocations, Path=SelectedIndex}" Value="-1">
											<Setter Property="Border.Visibility" Value="Hidden" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Border.Style>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition  Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>

								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<Label Grid.Row="0" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Location</Label>
								<TextBox Grid.Row="0" Grid.Column="1" Margin="4,0,4,4" Text="{Binding SelectedItem.name, ElementName=lstLocations}" Name="txtLocName" HorizontalAlignment="Left" VerticalAlignment="Top" />

								<Label Grid.Row="1" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Learned</Label>
								<CheckBox Grid.Row="1" Grid.Column="1" Margin="4,0,4,4" IsChecked="{Binding SelectedItem.learned, ElementName=lstLocations}" Name="chkLocLearned" Background="#FF585858" HorizontalAlignment="Left" VerticalAlignment="Center">
									<CheckBox.BorderBrush>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.95">
											<GradientStop Color="Black" Offset="1"/>
											<GradientStop Color="#FF2A2A2A" Offset="0"/>
										</LinearGradientBrush>
									</CheckBox.BorderBrush>
								</CheckBox>

								<Label Grid.Row="2" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Visited</Label>
								<CheckBox Grid.Row="2" Grid.Column="1" Margin="4,0,4,4" IsChecked="{Binding SelectedItem.visited, ElementName=lstLocations}" Name="chkLocVisited" Background="#FF585858" HorizontalAlignment="Left" VerticalAlignment="Center">
									<CheckBox.BorderBrush>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.95">
											<GradientStop Color="Black" Offset="1"/>
											<GradientStop Color="#FF2A2A2A" Offset="0"/>
										</LinearGradientBrush>
									</CheckBox.BorderBrush>
								</CheckBox>

								<Label Grid.Row="3" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Description</Label>
								<TextBox Grid.Row="3" Grid.Column="1" Margin="4,0,4,4"  Text="{Binding SelectedItem.description, ElementName=lstLocations}" Name="txtLocDescription" TextWrapping="Wrap" MinHeight="50" MaxHeight="200" VerticalScrollBarVisibility="Auto" VerticalAlignment="Top" />
							</Grid>
						</Border>
					</Grid>
				</TabItem>
				<TabItem Header="Variables" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderBrush="{DynamicResource ButtonNormalBorder}" BorderThickness="1,1,1,8" Margin="0" FontSize="12">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" MinHeight="50" />
								<RowDefinition Height="50" />
							</Grid.RowDefinitions>
							<ScrollViewer Grid.Row="0" Padding="0" VerticalScrollBarVisibility="Auto">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="40" />
										<ColumnDefinition Width="2*" />
										<ColumnDefinition Width="2*" />
										<ColumnDefinition Width="2*" />
										<ColumnDefinition Width="1*" />
									</Grid.ColumnDefinitions>
									<TextBlock Grid.Row="0" Grid.Column="1" Margin="10,0,0,0" FontWeight="Normal">Name</TextBlock>
									<TextBlock Grid.Row="0" Grid.Column="2" FontWeight="Normal">Initial Value</TextBlock>
									<TextBlock Grid.Row="0" Grid.Column="3" Margin="-10,0,0,0" FontWeight="Normal">Description</TextBlock>
									<TextBlock Grid.Row="0" Grid.Column="4" Margin="-25,0,0,0" FontWeight="Normal">Type</TextBlock>
									<Border Grid.ColumnSpan="99" Margin="15,15,15,0" Background="{DynamicResource GrayBrush3}" CornerRadius="4" BorderThickness="1">
										<ListBox Padding="0" x:Name="lstVariables" ItemsSource="{Binding Variables}" Background="{x:Null}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" HorizontalContentAlignment="Stretch" BorderBrush="{x:Null}" Margin="5">
											<ListBox.ItemContainerStyle>
												<Style TargetType="ListBoxItem">
													<Style.Resources>
														<Style TargetType="Border">
															<Setter Property="CornerRadius" Value="4"/>
														</Style>
													</Style.Resources>
												</Style>
											</ListBox.ItemContainerStyle>
											<ListBox.ContextMenu>
												<ContextMenu>
													<MenuItem x:Name="mnuDeleteVariable" Header="Delete Item" Click="mnuDeleteVariable_Click" />
												</ContextMenu>
											</ListBox.ContextMenu>
											<ListBox.ItemTemplate>
												<DataTemplate>
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="20" />
															<ColumnDefinition Width="2*" />
															<ColumnDefinition Width="2*" />
															<ColumnDefinition Width="2*" />
															<ColumnDefinition Width="1*" />
														</Grid.ColumnDefinitions>
														<fa:ImageAwesome Grid.Column="0" Icon="EllipsisH" Width="15" Height="15" Foreground="#FF585858" />
														<TextBox Grid.Column="1" Text="{Binding Path=name}"  Margin="2,1,2,1" />
														<TextBox Grid.Column="2" Text="{Binding Path=initialValue}" Margin="0,1,0,1" />
														<TextBox Grid.Column="3" Text="{Binding Path=description}"  Margin="1,1,2,1" />
														<ComboBox Grid.Column="4" Margin="0,1,10,1"  SelectedValue="{Binding type}" SelectedValuePath="Content" IsSynchronizedWithCurrentItem="True" Style="{DynamicResource ComboBoxStyle}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Center" VerticalContentAlignment="Top">
															<ComboBoxItem>Boolean</ComboBoxItem>
															<ComboBoxItem>Text</ComboBoxItem>
															<ComboBoxItem>Number</ComboBoxItem>
														</ComboBox>
													</Grid>
												</DataTemplate>
											</ListBox.ItemTemplate>
										</ListBox>
									</Border>
								</Grid>
							</ScrollViewer>
							<Border Grid.Row="1" Padding="10,6,10,10" HorizontalAlignment="Right" Margin="0,-2,50,0" VerticalAlignment="Top" Background="{DynamicResource GrayBrush3}" CornerRadius="0,0,4,4">
								<StackPanel Orientation="Horizontal" Margin="0" VerticalAlignment="Top" Background="{DynamicResource GrayBrush3}">
									<Button fa:Awesome.Content="Plus" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="24" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderThickness="0" FontWeight="Bold" Height="24" Click="btnAddVariable_Click">
										<Button.Style>
											<Style TargetType="{x:Type Button}">
												<Setter Property="Background" Value="Transparent"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Button}">
															<Border Background="{TemplateBinding Background}">
																<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
															</Border>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Background" Value="#FF2a2a2a"/>
													</Trigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>
									<Button fa:Awesome.Content="Minus" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="24" BorderThickness="0" FontWeight="Bold" Click="mnuDeleteVariable_Click">
										<Button.Style>
											<Style TargetType="{x:Type Button}">
												<Setter Property="Background" Value="Transparent"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Button}">
															<Border Background="{TemplateBinding Background}">
																<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
															</Border>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Background" Value="#FF2a2a2a"/>
													</Trigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>
								</StackPanel>
							</Border>
						</Grid>
						<!--GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Background="{DynamicResource ButtonNormalBorder}" BorderThickness="3,0,0,0" Margin="0,15" />
						<Border Grid.Column="2"  Margin="15" Padding="10" Background="{DynamicResource GrayBrush3}" CornerRadius="4">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition  Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>

								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<Label Grid.Row="0" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Variable</Label>
								<TextBox Grid.Row="0" Grid.Column="1" Margin="4,0,4,4"  Text="{Binding SelectedItem.name, ElementName=lstVariables}" Name="txtVarName" HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" />

								<Label Grid.Row="1" Grid.Column="0"  FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Type</Label>
								<ComboBox Grid.Row="1" Grid.Column="1" Margin="4,0,4,4"  Text="{Binding SelectedItem.type, ElementName=lstVariables}" IsEditable="True" Name="txtVarType" Style="{DynamicResource ComboBoxStyle}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top">
									<ComboBoxItem>Boolean</ComboBoxItem>
									<ComboBoxItem>Text</ComboBoxItem>
									<ComboBoxItem>Number</ComboBoxItem>
								</ComboBox>

								<Label Grid.Row="2" Grid.Column="0"  FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Initial Value</Label>
								<TextBox Grid.Row="2" Grid.Column="1" Margin="4,0,4,4" Text="{Binding SelectedItem.initialValue, ElementName=lstVariables}" Name="txtVarValue" VerticalAlignment="Top" />

								<Label Grid.Row="3" Grid.Column="0"  FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Description</Label>
								<TextBox Grid.Row="3" Grid.Column="1" Margin="4,0,4,4" SpellCheck.IsEnabled="True" TextWrapping="Wrap" MinHeight="50" MaxHeight="200" VerticalScrollBarVisibility="Auto" Text="{Binding SelectedItem.description, ElementName=lstVariables}" Name="txtVarDescription" />
							</Grid>
						</Border-->
					</Grid>
				</TabItem>
				<TabItem x:Name="tabConversations" Header="Conversations" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderBrush="{DynamicResource ButtonNormalBorder}" BorderThickness="1,1,1,8" Margin="0" FontSize="12">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="3*"/>
							<ColumnDefinition Width="5"/>
							<ColumnDefinition Width="1*"/>
						</Grid.ColumnDefinitions>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<Grid Grid.Row="0" Grid.ColumnSpan="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="30" />
								</Grid.ColumnDefinitions>
								<ComboBox x:Name="lstConversations" Style="{DynamicResource ComboBoxStyle}" Grid.Column="0" HorizontalContentAlignment="Stretch">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Path=title}" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Top" Width="Auto" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
								<Button Grid.Column="1" Click="Button_MouseDown" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Width="24" Height="24" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
									<Button.Template>
										<ControlTemplate TargetType="{x:Type Button}">
											<Border Background="{TemplateBinding Background}" VerticalAlignment="Stretch">
												<Label HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
													<ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
												</Label>
											</Border>
										</ControlTemplate>
									</Button.Template>
									<Button.ContextMenu>
										<ContextMenu>
											<MenuItem Header="New Conversation" Click="btnAddConversation_Click"/>
											<MenuItem Header="Delete Current Conversation" Click="mnuDeleteConversation_Click" />
										</ContextMenu>
									</Button.ContextMenu>
									<fa:FontAwesome Icon="EllipsisV" FontSize="14" />
								</Button>
							</Grid>
							<Border Grid.Row="1" Grid.ColumnSpan="2" Margin="0" BorderThickness="1">
								<ScrollViewer Grid.Row="0" Name="scrlTree" KeyUp="Delete_Node" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" PreviewMouseWheel="Zoom_MouseWheel" HorizontalContentAlignment="Center" MouseWheel="Zoom_MouseWheel" MouseDown="ScrollViewer_MouseDown" MouseMove="ScrollViewer_MouseMove">
									<Grid x:Name="gridTree" HorizontalAlignment="Center" VerticalAlignment="Top">
										<TreeContainer:TreeContainer Width="Auto" Height="Auto" x:Name="tcMain" Margin="40" VerticalBuffer="40" HorizontalAlignment="Center" VerticalAlignment="Top" MinWidth="100" MinHeight="20" HorizontalBuffer="20" HorizontalBufferSubtree="20" Panel.ZIndex="1" >
											<TreeContainer:TreeContainer.LayoutTransform>
												<ScaleTransform CenterX="0" CenterY="0" ScaleX="{Binding ElementName=uiScaleSlider,Path=Value}" ScaleY="{Binding ElementName=uiScaleSlider,Path=Value}" Changed="ScaleTransform_Changed" />
											</TreeContainer:TreeContainer.LayoutTransform>
										</TreeContainer:TreeContainer>
									</Grid>
								</ScrollViewer>
							</Border>
							<Border Grid.Column="0" Grid.Row="2" Margin="0,0,4,0" CornerRadius="4" Background="{DynamicResource GrayBrush3}" BorderBrush="{DynamicResource GrayBrush3}" BorderThickness="2" Padding="2">
							<Grid x:Name="gridScript">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Label Grid.Row="0" DockPanel.Dock="Top" Height="27" VerticalAlignment="Center">Script</Label>
								<local:BindableAvalonEditor Grid.Row="1" x:Name="editScript" FontFamily="Consolas" SyntaxHighlighting="Lua" Foreground="#ffcccccc"
									Background="#ff2d2d2d" FontSize="10pt" WordWrap="True" ShowLineNumbers="True" Text="{Binding Path=UserScript}" FontWeight="Normal">
									<local:BindableAvalonEditor.ContextMenu>
										<ContextMenu FontFamily="Roboto" DataContext="{Binding ElementName=EditorWin}">
											<MenuItem x:Name="menuScriptCharacters" Header="Characters" ItemsSource="{Binding theDatabase.Actors, ElementName=EditorWin}" Click="InsertVar_Click">
												<MenuItem.ItemContainerStyle>
													<Style TargetType="{x:Type MenuItem}">
														<Setter Property="Foreground" Value="Black" />
														<Setter Property="Header" Value="{Binding Path=name}" />
													</Style>
												</MenuItem.ItemContainerStyle>
											</MenuItem>
											<MenuItem x:Name="menuScriptVars" Header="Variables" ItemsSource="{Binding theDatabase.Variables, ElementName=EditorWin}" Click="InsertVar_Click">
												<MenuItem.ItemContainerStyle>
													<Style TargetType="{x:Type MenuItem}">
														<Setter Property="Foreground" Value="Black" />
														<Setter Property="Header" Value="{Binding Path=name}" />
													</Style>
												</MenuItem.ItemContainerStyle>
											</MenuItem>
											<MenuItem x:Name="menuScriptItems" Header="Items" ItemsSource="{Binding theDatabase.Items, ElementName=EditorWin}" Click="InsertVar_Click">
												<MenuItem.ItemContainerStyle>
													<Style TargetType="{x:Type MenuItem}">
														<Setter Property="Foreground" Value="Black" />
														<Setter Property="Header" Value="{Binding Path=name}" />
													</Style>
												</MenuItem.ItemContainerStyle>
											</MenuItem>
											<MenuItem x:Name="menuScriptLocations" Header="Locations" ItemsSource="{Binding theDatabase.Locations, ElementName=EditorWin}" Click="InsertVar_Click">
												<MenuItem.ItemContainerStyle>
													<Style TargetType="{x:Type MenuItem}">
														<Setter Property="Foreground" Value="Black" />
														<Setter Property="Header" Value="{Binding Path=name}" />
													</Style>
												</MenuItem.ItemContainerStyle>
											</MenuItem>
										</ContextMenu>
									</local:BindableAvalonEditor.ContextMenu>
								</local:BindableAvalonEditor>
							</Grid>
							</Border>
							<Border  Grid.Column="1" Grid.Row="2" Margin="0,0,4,0" CornerRadius="4" Background="{DynamicResource GrayBrush3}" BorderBrush="{DynamicResource GrayBrush3}" BorderThickness="2" Padding="2">
							<DockPanel x:Name="conditionsStack">
								<DockPanel DockPanel.Dock="Top" Height="27" Background="{DynamicResource GrayBrush3}">
									<Label>Conditions</Label>
									<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
										<Label Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Background="{x:Null}" HorizontalAlignment="Right">When False:</Label>
										<ComboBox Name="cmbFunction" Width="100" Text="{Binding FalseCondtionAction}" Style="{DynamicResource ComboBoxStyle}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" VerticalAlignment="Center">
											<ComboBoxItem IsSelected="True">Block</ComboBoxItem>
											<ComboBoxItem>Passthrough</ComboBoxItem>
										</ComboBox>
									</StackPanel>
								</DockPanel>

								<local:BindableAvalonEditor x:Name="editConditions" FontFamily="Consolas" SyntaxHighlighting="Lua"
										Foreground="#ffcccccc " Background="#ff2d2d2d" FontSize="10pt" WordWrap="True" ShowLineNumbers="True" MinHeight="90" Text="{Binding Path=ConditionsString}" FontWeight="Normal">
									<local:BindableAvalonEditor.ContextMenu>
										<ContextMenu FontFamily="Roboto" DataContext="{Binding ElementName=EditorWin}">
											<MenuItem x:Name="menuCondCharacters" Header="Characters" ItemsSource="{Binding theDatabase.Actors, ElementName=EditorWin}" Click="InsertVarCondition_Click">
												<MenuItem.ItemContainerStyle>
													<Style TargetType="{x:Type MenuItem}">
														<Setter Property="Foreground" Value="Black" />
														<Setter Property="Header" Value="{Binding Path=name}" />
													</Style>
												</MenuItem.ItemContainerStyle>
											</MenuItem>
											<MenuItem x:Name="menuCondVars" Header="Variables" ItemsSource="{Binding theDatabase.Variables, ElementName=EditorWin}" Click="InsertVarCondition_Click">
												<MenuItem.ItemContainerStyle>
													<Style TargetType="{x:Type MenuItem}">
														<Setter Property="Foreground" Value="Black" />
														<Setter Property="Header" Value="{Binding Path=name}" />
													</Style>
												</MenuItem.ItemContainerStyle>
											</MenuItem>
											<MenuItem x:Name="menuCondItems" Header="Items" ItemsSource="{Binding theDatabase.Items, ElementName=EditorWin}" Click="InsertVarCondition_Click">
												<MenuItem.ItemContainerStyle>
													<Style TargetType="{x:Type MenuItem}">
														<Setter Property="Foreground" Value="Black" />
														<Setter Property="Header" Value="{Binding Path=name}" />
													</Style>
												</MenuItem.ItemContainerStyle>
											</MenuItem>
											<MenuItem x:Name="menuCondLocations" Header="Locations" ItemsSource="{Binding theDatabase.Locations, ElementName=EditorWin}" Click="InsertVarCondition_Click">
												<MenuItem.ItemContainerStyle>
													<Style TargetType="{x:Type MenuItem}">
														<Setter Property="Foreground" Value="Black" />
														<Setter Property="Header" Value="{Binding Path=name}" />
													</Style>
												</MenuItem.ItemContainerStyle>
											</MenuItem>
										</ContextMenu>
									</local:BindableAvalonEditor.ContextMenu>
								</local:BindableAvalonEditor>
							</DockPanel>
							</Border>
						</Grid>
						<GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Background="{DynamicResource ButtonNormalBorder}" BorderThickness="3,0,0,0" Margin="0" />
						<Border Grid.Column="2"  Margin="5,0,0,15" Padding="10" Background="{DynamicResource GrayBrush3}" CornerRadius="4">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="1*" />
									<RowDefinition Height="3*" />
								</Grid.RowDefinitions>
								<Viewbox Grid.Row="0" Name="vbOverview" MouseLeftButtonDown="vbOverview_MouseLeftButtonDown" DataContext="{Binding ElementName=scrlTree}">
									<Grid>
										<Rectangle Name="recOverview" Width="{Binding Content.ActualWidth}" Height="{Binding Content.ActualHeight}">
											<Rectangle.Fill>
												<VisualBrush Stretch="UniformToFill" Visual="{Binding Content}" />
											</Rectangle.Fill>
										</Rectangle>

										<Thumb Name="thmViewport" Width="{Binding ViewportWidth}" Height="{Binding ViewportHeight}" HorizontalAlignment="Left" VerticalAlignment="Top" DragDelta="thmViewport_DragDelta">
											<Thumb.Background>
												<SolidColorBrush Color="#FF343D46"/>
											</Thumb.Background>
											<Thumb.RenderTransform>
												<TranslateTransform X="{Binding HorizontalOffset}" Y="{Binding VerticalOffset}" />
											</Thumb.RenderTransform>
											<Thumb.Template>
												<ControlTemplate TargetType="Thumb">
													<Border BorderBrush="{DynamicResource AccentColorBrush4}" BorderThickness="0" Opacity="0.8" Background="{DynamicResource AccentColorBrush4}"/>
												</ControlTemplate>
											</Thumb.Template>
										</Thumb>
									</Grid>
								</Viewbox>
								<TabControl Grid.Row="1">
									<TabItem x:Name="tabConvo" Header="Convo" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition  Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>

											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<Label Grid.Row="0" Grid.Column="0" Margin="4,0,4,4" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold">ID</Label>
											<TextBlock Grid.Row="0" Grid.Column="1" Margin="4,0,4,4" TextAlignment="Left" Text="{Binding SelectedItem.ID, ElementName=lstConversations}" Name="txtConvoID" VerticalAlignment="Top"/>

											<Label Grid.Row="1" Grid.Column="0" Margin="4,0,4,4" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold">Title</Label>
											<TextBox Grid.Row="1" Grid.Column="1" Margin="4,0,4,4" Text="{Binding SelectedItem.title, ElementName=lstConversations}" Name="txtConvoTitle" VerticalAlignment="Top" />

											<Label Grid.Row="2" Grid.Column="0" Margin="4,0,4,4" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold">Actor</Label>
											<ComboBox Grid.Row="2" Grid.Column="1" Margin="4,0,4,4" Style="{DynamicResource ComboBoxStyle}" SelectedIndex="{Binding SelectedItem.actorID, ElementName=lstConversations}" Name="lstConvoActor" HorizontalContentAlignment="Stretch" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top">
												<ComboBox.ItemTemplate>
													<DataTemplate>
														<StackPanel Orientation="Horizontal" Height="50" MaxHeight="50">
															<Image Source="{Binding Path=picture}" Name="imgActorImage" HorizontalAlignment="Stretch" Height="48" VerticalAlignment="Stretch" Width="48" Grid.ColumnSpan="1" RenderOptions.BitmapScalingMode="HighQuality" MaxWidth="48" MaxHeight="48" Margin="0,0,3,0"/>
															<TextBlock Text="{Binding Path=name}"  Name="lblActorName" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Top" FontWeight="Bold" Height="28" Width="Auto" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
														</StackPanel>
													</DataTemplate>
												</ComboBox.ItemTemplate>
											</ComboBox>


											<Label Grid.Row="3" Grid.Column="0" Margin="4,0,4,4" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold">Conversant</Label>
											<ComboBox Grid.Row="3" Grid.Column="1" Margin="4,0,4,4" Style="{DynamicResource ComboBoxStyle}" SelectedIndex="{Binding SelectedItem.conversantID, ElementName=lstConversations}" Name="lstConvoConversant" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" HorizontalContentAlignment="Stretch" VerticalAlignment="Top">
												<ComboBox.ItemTemplate>
													<DataTemplate>
														<StackPanel Orientation="Horizontal" Height="50" MaxHeight="50">
															<Image Source="{Binding Path=picture}" Name="imgActorImage" HorizontalAlignment="Stretch" Height="48" VerticalAlignment="Stretch" Width="48" Grid.ColumnSpan="1" RenderOptions.BitmapScalingMode="HighQuality" MaxWidth="48" MaxHeight="48" Margin="0,0,3,0"/>
															<TextBlock Text="{Binding Path=name}"  Name="lblActorName" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Top" FontWeight="Bold" Height="28" Width="Auto" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Background="{x:Null}" />
														</StackPanel>
													</DataTemplate>
												</ComboBox.ItemTemplate>
											</ComboBox>

											<Label Grid.Row="5" Grid.Column="0" Margin="4,0,4,4" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold">Description</Label>
											<TextBox Grid.Row="5" Grid.Column="1" Margin="4,0,4,4" SpellCheck.IsEnabled="True" TextWrapping="Wrap" MinHeight="50" MaxHeight="200" VerticalScrollBarVisibility="Auto" Text="{Binding SelectedItem.description, ElementName=lstConversations}" Name="txtConvoDescription" />
											<Label Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Default Fields
											</Label>
											<StackPanel Orientation="Horizontal" Grid.Row="6" Grid.Column="1" Margin="4,0,4,4" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="Hidden">
												<Button Width="20" Height="20" x:Name="btnAddField" Click="btnAddField_Click" Background="#FF2A2A2A" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">+</Button>
											</StackPanel>
											<DataGrid x:Name="dgFields" AutoGenerateColumns="False" Grid.Row="7" Grid.ColumnSpan="2" Grid.Column="0" DataContext="{Binding ElementName=EditorWin}" ItemsSource="{Binding selectedEntry.fields}" HorizontalContentAlignment="Stretch" MinHeight="100" VerticalContentAlignment="Stretch" SelectionMode="Single" CanUserAddRows="True" CanUserDeleteRows="True" Background="#FF2A2A2A" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">
												<DataGrid.Resources>
													<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#333333"/>
													<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#eeeeee"/>
													<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#555555"/>
												</DataGrid.Resources>
												<DataGrid.ColumnHeaderStyle>
													<Style TargetType="DataGridColumnHeader">
														<Setter Property="Background" Value="#FF222222"/>
														<Setter Property="Foreground" Value="White"/>
													</Style>
												</DataGrid.ColumnHeaderStyle>

												<DataGrid.Columns>
													<DataGridTextColumn Width="80" Header="Name" Binding="{Binding name}"/>
													<DataGridTextColumn Width="40" Header="Type" Binding="{Binding type}" />
													<DataGridTextColumn  Width="*" Header="Value" Binding="{Binding value}"/>
													<DataGridTemplateColumn Header="Del" Width="30">
														<DataGridTemplateColumn.CellTemplate>
															<DataTemplate>
																<ContentControl Button.Click="btnFieldDelete_Click">
																	<ContentControl.Resources>
																		<Button x:Key="btn" Content="Del" Click="btnFieldDelete_Click" Background="#FF2A2A2A" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
																	</ContentControl.Resources>
																	<ContentControl.Style>
																		<Style TargetType="ContentControl">
																			<Setter Property="Content" Value="{StaticResource btn}" />
																			<Style.Triggers>
																				<DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="{x:Static CollectionView.NewItemPlaceholder}">
																					<Setter Property="Visibility" Value="Hidden">
																					</Setter>
																				</DataTrigger>
																			</Style.Triggers>
																		</Style>
																	</ContentControl.Style>
																</ContentControl>
															</DataTemplate>
														</DataGridTemplateColumn.CellTemplate>
													</DataGridTemplateColumn>
												</DataGrid.Columns>
											</DataGrid>
										</Grid>
									</TabItem>
									<TabItem x:Name="tabEntry" Header="Entry" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">
										<ScrollViewer VerticalScrollBarVisibility="Auto">
											<Grid x:Name="gridDialogueEntry" VerticalAlignment="Top">
												<Grid.ColumnDefinitions>
													<ColumnDefinition  Width="Auto"/>
													<ColumnDefinition Width="*"/>
												</Grid.ColumnDefinitions>

												<Grid.RowDefinitions>
													<RowDefinition Height="Auto"/>
													<RowDefinition Height="Auto"/>
													<RowDefinition Height="Auto"/>
													<RowDefinition Height="Auto"/>
													<RowDefinition Height="Auto"/>
													<RowDefinition>
														<RowDefinition.Style>
															<Style>
																<Setter Property="RowDefinition.Height" Value="Auto" />
																<Style.Triggers>
																	<DataTrigger Binding="{Binding Path=isGroup}" Value="true">
																		<Setter Property="RowDefinition.Height" Value="0"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</RowDefinition.Style>
													</RowDefinition>
													<RowDefinition>
														<RowDefinition.Style>
															<Style>
																<Setter Property="RowDefinition.Height" Value="Auto" />
																<Style.Triggers>
																	<DataTrigger Binding="{Binding Path=isGroup}" Value="true">
																		<Setter Property="RowDefinition.Height" Value="0"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</RowDefinition.Style>
													</RowDefinition>
													<RowDefinition>
														<RowDefinition.Style>
															<Style>
																<Setter Property="RowDefinition.Height" Value="Auto" />
																<Style.Triggers>
																	<DataTrigger Binding="{Binding Path=isGroup}" Value="true">
																		<Setter Property="RowDefinition.Height" Value="0"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</RowDefinition.Style>
													</RowDefinition>
													<RowDefinition>
														<RowDefinition.Style>
															<Style>
																<Setter Property="RowDefinition.Height" Value="Auto" />
																<Style.Triggers>
																	<DataTrigger Binding="{Binding Path=isGroup}" Value="true">
																		<Setter Property="RowDefinition.Height" Value="0"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</RowDefinition.Style>
													</RowDefinition>
													<RowDefinition />
													<RowDefinition>
														<RowDefinition.Style>
															<Style>
																<Setter Property="RowDefinition.Height" Value="Auto" />
																<Style.Triggers>
																	<DataTrigger Binding="{Binding Path=isGroup}" Value="true">
																		<Setter Property="RowDefinition.Height" Value="0"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</RowDefinition.Style>
													</RowDefinition>
													<RowDefinition Height="Auto"/>
													<RowDefinition Height="Auto"/>
												</Grid.RowDefinitions>
												<Label Grid.Row="0" Grid.Column="0" FontSize="12" Margin="4,0,4,4" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">ID</Label>
												<TextBlock Grid.Row="0" Grid.Column="1" Margin="4,0,4,4" Text="{Binding ID}" TextAlignment="Left" Name="txtDialogueID"/>

												<Label Grid.Row="1" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Title</Label>
												<TextBox Grid.Row="1" Grid.Column="1" Margin="4,0,4,4" Text="{Binding title}" Name="txtDialogueTitle" />

												<StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="0">
												<Label FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Actor</Label>
												<Button x:Name="btnSwap" Margin="0,0,4,4" Click="btnSwap_Click" VerticalAlignment="Bottom" HorizontalAlignment="Right" Padding="3,1">
													<Button.Style>
														<Style TargetType="Button">
															<Setter Property="TextBlock.TextAlignment" Value="Center" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="Button">
																		<Border CornerRadius="2" BorderThickness="1" Background="#FF585858" >
																			<Border.BorderBrush>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.95">
																					<GradientStop Color="Black" Offset="1"/>
																					<GradientStop Color="#FF2A2A2A" Offset="0"/>
																				</LinearGradientBrush>
																			</Border.BorderBrush>
																			<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
																		</Border>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</Button.Style>
													↑↓
												</Button>
												</StackPanel>
												<ComboBox Margin="4,0,4,4" Grid.Row="2" Grid.Column="1" Style="{DynamicResource ComboBoxStyle}" HorizontalContentAlignment="Stretch" SelectedItem="{Binding actor}" Name="lstDialogueActor" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top">
													<ComboBox.ItemTemplate>
														<DataTemplate>
															<TextBlock Text="{Binding Path=name}"  Name="lblActorName" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Top" FontWeight="Bold" Width="Auto" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
														</DataTemplate>
													</ComboBox.ItemTemplate>
												</ComboBox>

												<Label Grid.Row="3" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Conversant</Label>
												<ComboBox Margin="4,0,4,4" Style="{DynamicResource ComboBoxStyle}" Grid.Row="3" Grid.Column="1" HorizontalContentAlignment="Stretch" SelectedItem="{Binding conversant}" Name="lstDialogueConversant" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">
													<ComboBox.ItemTemplate>
														<DataTemplate>
															<TextBlock Text="{Binding Path=name}"  Name="lblActorName" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Top" FontWeight="Bold" Width="Auto" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
														</DataTemplate>
													</ComboBox.ItemTemplate>
												</ComboBox>

												<Label Grid.Row="4" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Choice Hub</Label>
												<StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="1" Margin="4,0,4,4" HorizontalAlignment="Left" VerticalAlignment="Center">
													<CheckBox Name="chkGroup" IsChecked="{Binding isGroup}" Background="#FF585858">
														<CheckBox.BorderBrush>
															<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.95">
																<GradientStop Color="Black" Offset="1"/>
																<GradientStop Color="#FF2A2A2A" Offset="0"/>
															</LinearGradientBrush>
														</CheckBox.BorderBrush>
													</CheckBox>
												</StackPanel>

												<Label Grid.Row="5" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Menu Text</Label>
												<TextBox Grid.Row="5" Grid.Column="1" Margin="4,0,4,4" Text="{Binding menuText}" Name="txtMenuText"/>

												<Label Grid.Row="6" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Dialogue</Label>
												<TextBox Grid.Row="6" Grid.Column="1" Margin="4,0,4,4" SpellCheck.IsEnabled="True" TextWrapping="Wrap" AcceptsReturn="True"
														 MinHeight="50" MaxHeight="200" VerticalScrollBarVisibility="Auto" Name="txtDialogueWords" Text="{Binding dialogueText}" />

												<Label Grid.Row="7" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Sequence</Label>
												<TextBox Grid.Row="7" Grid.Column="1" Margin="4,0,4,4" TextWrapping="Wrap" AcceptsReturn="True"
														 MinHeight="50" MaxHeight="200" VerticalScrollBarVisibility="Auto" Name="txtSequence" Text="{Binding sequence}"/>

												<Label Grid.Row="8" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Node Color</Label>
												<ComboBox Grid.Row="8" Grid.Column="1" Margin="4,0,4,4" Style="{DynamicResource ComboBoxStyle}" Text="{Binding NodeColor}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">
													<ComboBoxItem Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">Normal</ComboBoxItem>
													<ComboBoxItem Background="#FF631E29" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">Red</ComboBoxItem>
													<ComboBoxItem Background="#FF253831" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">Green</ComboBoxItem>
													<ComboBoxItem Background="#FF004358" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">Blue</ComboBoxItem>
													<ComboBoxItem Background="#FF35203B" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">Purple</ComboBoxItem>
												</ComboBox>

												<Label Grid.Row="9" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Links:</Label>
												<StackPanel Orientation="Vertical" Grid.Row="9" Grid.Column="1" Margin="4,0,4,4">
													<UniformGrid Margin="0,0,0,5" Columns="3">
														<ComboBox x:Name="cbConvo" ItemsSource="{Binding ElementName=EditorWin, Path=theDatabase.Conversations}" Margin="0,0,5,0" Style="{DynamicResource ComboBoxStyle}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SelectionChanged="cbConvo_SelectionChanged" ScrollViewer.CanContentScroll="True" HorizontalContentAlignment="Stretch">
															<ComboBox.ItemTemplate>
																<DataTemplate>
																	<StackPanel Orientation="Horizontal">
																		<TextBlock Text="{Binding title}"/>
																		<TextBlock Text=" [" />
																		<TextBlock Text="{Binding ID}" />
																		<TextBlock Text="]" />
																	</StackPanel>
																</DataTemplate>
															</ComboBox.ItemTemplate>
														</ComboBox>
														<ComboBox x:Name="cbDialogueEntry" ItemsSource="{Binding ElementName=EditorWin, Path=theDatabase.Conversations[cbConvo.Text].DialogEntries}" Style="{DynamicResource ComboBoxStyle}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Margin="0,0,5,0">
															<ComboBox.ItemTemplate>
																<DataTemplate>
																	<StackPanel Orientation="Horizontal">
																		<TextBlock Text="{Binding title}" />
																		<TextBlock Text=" [" />
																		<TextBlock Text="{Binding ID}" />
																		<TextBlock Text="]" />
																	</StackPanel>
																</DataTemplate>
															</ComboBox.ItemTemplate>
														</ComboBox>
														<Button x:Name="btnLink" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource AccentColorBrush5}" BorderThickness="2" Click="btnLink_Click">
															<Button.Style>
																<Style TargetType="Button">
																	<Setter Property="TextBlock.TextAlignment" Value="Center" />
																	<Setter Property="Template">
																		<Setter.Value>
																			<ControlTemplate TargetType="Button">
																				<Border CornerRadius="2" BorderThickness="1" Background="#FF585858" >
																					<Border.BorderBrush>
																						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.95">
																							<GradientStop Color="Black" Offset="1"/>
																							<GradientStop Color="#FF2A2A2A" Offset="0"/>
																						</LinearGradientBrush>
																					</Border.BorderBrush>
																					<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
																				</Border>
																			</ControlTemplate>
																		</Setter.Value>
																	</Setter>
																</Style>
															</Button.Style>
															Add
														</Button>
													</UniformGrid>
													<ListView Height="50" x:Name="lstLinks" ItemsSource="{Binding OutgoingLinks}" Background="#FF2A2A2A" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">
														<ListView.BorderBrush>
															<LinearGradientBrush EndPoint="0.5,0.1" StartPoint="0.5,0">
																<GradientStop Color="Black" Offset="0"/>
																<GradientStop Color="#FF1f1f1f" Offset="1"/>
															</LinearGradientBrush>
														</ListView.BorderBrush>
														<ListBox.ContextMenu>
															<ContextMenu>
																<MenuItem x:Name="mnuDeleteLink" Header="Delete Link" Click="mnuDeleteLink_Click" />
															</ContextMenu>
														</ListBox.ContextMenu>
														<ListBox.ItemContainerStyle>
															<Style TargetType="{x:Type ListBoxItem}">
																<Style.Triggers>
																	<DataTrigger Binding="{Binding IsConnector}" Value="False">
																		<Setter Property="ListBoxItem.Visibility"  Value="Hidden" />
																		<Setter Property="ListBoxItem.Height"  Value="0" />
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</ListBox.ItemContainerStyle>
														<ListView.ItemTemplate>
															<DataTemplate>
																<StackPanel Orientation="Horizontal">
																	<TextBlock Text="Conversation: " Foreground="{DynamicResource AccentColorBrush4}" />
																	<TextBlock Text="{Binding DestinationConvoID}" Foreground="{DynamicResource AccentColorBrush4}" />
																	<TextBlock Text=" -> Node: " />
																	<TextBlock Text="{Binding DestinationDialogID}" />
																</StackPanel>
															</DataTemplate>
														</ListView.ItemTemplate>
													</ListView>
												</StackPanel>

												<Label Grid.Row="10" Grid.Column="0" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Logic Node</Label>
												<StackPanel Orientation="Horizontal" Grid.Row="10" Grid.Column="1" Margin="4,0,4,4" HorizontalAlignment="Left" VerticalAlignment="Center">
													<CheckBox Name="chkLogicNode" IsChecked="{Binding logicNode}" Background="#FF585858">
														<CheckBox.BorderBrush>
															<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.95">
																<GradientStop Color="Black" Offset="1"/>
																<GradientStop Color="#FF2A2A2A" Offset="0"/>
															</LinearGradientBrush>
														</CheckBox.BorderBrush>
													</CheckBox>
												</StackPanel>
												<Label Grid.Row="11" Grid.Column="0" Grid.ColumnSpan="2" FontSize="12" Margin="4,0,4,4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" VerticalAlignment="Top" FontWeight="Bold" HorizontalAlignment="Left">Fields</Label>
												<StackPanel Orientation="Horizontal" Grid.Row="11" Grid.Column="1" Margin="4,0,4,4" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="Hidden">
													<Button Width="20" Height="20" x:Name="btnAddDefaultField" Click="btnAddDefaultField_Click" Background="#FF2A2A2A" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">+</Button>
												</StackPanel>
												<DataGrid x:Name="dgDefaultFields" AutoGenerateColumns="False" Grid.Row="12" Grid.ColumnSpan="2" Grid.Column="0" DataContext="{Binding ElementName=EditorWin}" ItemsSource="{Binding selectedEntry.fields}" HorizontalContentAlignment="Stretch" MinHeight="100" VerticalContentAlignment="Stretch" SelectionMode="Single" CanUserAddRows="True" CanUserDeleteRows="True" Background="#FF2A2A2A" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">
													<DataGrid.Resources>
														<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#333333"/>
														<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#eeeeee"/>
														<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#555555"/>
													</DataGrid.Resources>
													<DataGrid.ColumnHeaderStyle>
														<Style TargetType="DataGridColumnHeader">
															<Setter Property="Background" Value="#FF222222"/>
															<Setter Property="Foreground" Value="White"/>
														</Style>
													</DataGrid.ColumnHeaderStyle>

													<DataGrid.Columns>
														<DataGridTextColumn Width="80" Header="Name" Binding="{Binding name}"/>
														<DataGridTextColumn Width="40" Header="Type" Binding="{Binding type}" />
														<DataGridTextColumn  Width="*" Header="Value" Binding="{Binding value}"/>
														<DataGridTemplateColumn Header="Del" Width="30">
															<DataGridTemplateColumn.CellTemplate>
																<DataTemplate>
																	<ContentControl Button.Click="btnDefaultFieldDelete_Click">
																		<ContentControl.Resources>
																			<Button x:Key="btn" Content="Del" Click="btnDefaultFieldDelete_Click" Background="#FF2A2A2A" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
																		</ContentControl.Resources>
																		<ContentControl.Style>
																			<Style TargetType="ContentControl">
																				<Setter Property="Content" Value="{StaticResource btn}" />
																				<Style.Triggers>
																					<DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="{x:Static CollectionView.NewItemPlaceholder}">
																						<Setter Property="Visibility" Value="Hidden">
																						</Setter>
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</ContentControl.Style>
																	</ContentControl>
																</DataTemplate>
															</DataGridTemplateColumn.CellTemplate>
														</DataGridTemplateColumn>
													</DataGrid.Columns>
												</DataGrid>
											</Grid>
										</ScrollViewer>
									</TabItem>
									
								</TabControl>
							</Grid>
						</Border>
					</Grid>
				</TabItem>
			</TabControl>
		</DockPanel>
		<StatusBar Grid.Row="2" Grid.ColumnSpan="100" Background="{DynamicResource GrayBrush1}">
			<StatusBarItem HorizontalAlignment="Left">
				<Button Margin="5" Content="Reset" Cursor="Hand" Click="ResetButton_Click">
					<Button.Template>
						<ControlTemplate TargetType="Button">
							<TextBlock TextDecorations="Underline">
								<ContentPresenter />
							</TextBlock>
						</ControlTemplate>
					</Button.Template>
					<Button.Style>
						<Style TargetType="Button">
							<Setter Property="Foreground" Value="{DynamicResource AccentColorBrush4}" />
							<Style.Triggers>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Foreground" Value="{DynamicResource AccentColorBrush2}" />
								</Trigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>
			</StatusBarItem>
			<StatusBarItem HorizontalAlignment="Left">
				<Slider x:Name="uiScaleSlider" ToolTip="Scales the tree view." Value="1" Minimum="0.2" Maximum="3" MinWidth="100" VerticalAlignment="Center">
					<Slider.Resources>
						<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Black" />
						<SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkDarkBrushKey}" Color="Silver" />
					</Slider.Resources>
				</Slider>
			</StatusBarItem>
			<StatusBarItem HorizontalAlignment="Left">
				<Label x:Name="Scale_Percent" Content="{Binding ElementName=uiScaleSlider,Path=Value}" ContentStringFormat="{}{0:0%}"/>
			</StatusBarItem>
			<StatusBarItem HorizontalAlignment="Right">
				<Button Margin="5" Content="Project Settings" Cursor="Hand" Click="SettingsButton_Click">
					<Button.Template>
						<ControlTemplate TargetType="Button">
							<TextBlock TextDecorations="Underline">
								<ContentPresenter />
							</TextBlock>
						</ControlTemplate>
					</Button.Template>
					<Button.Style>
						<Style TargetType="Button">
							<Setter Property="Foreground" Value="{DynamicResource AccentColorBrush4}" />
							<Style.Triggers>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Foreground" Value="{DynamicResource AccentColorBrush2}" />
								</Trigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>
			</StatusBarItem>
			<StatusBarItem HorizontalAlignment="Right" Margin="0,0,16,0">
				<TextBlock Text="v2.3.0" />
			</StatusBarItem>
		</StatusBar>
		<StackPanel Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="225">
			<Popup Name="popSettings" HorizontalAlignment="Left" VerticalOffset="-87" HorizontalOffset="40" VerticalAlignment="Bottom" Width="225" MouseLeave="popSettings_MouseLeave">
				<Border BorderBrush="{DynamicResource AccentColorBrush2}" BorderThickness="1">
					<Grid Background="{StaticResource ResourceKey=WhiteBrush}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="70" />
							<ColumnDefinition Width="1*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Rectangle Grid.Column="0" Grid.RowSpan="1000" Fill="{StaticResource ResourceKey=AccentColorBrush5}" />

						<TextBlock Grid.Row="0" Grid.Column="0" Margin="4" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold">Author</TextBlock>
						<TextBox Grid.Row="0" Grid.Column="1" Margin="4" Text="{Binding Author}" Name="txtSettingAuthor" TextChanged="txtSettingAuthor_TextChanged"/>

						<TextBlock Grid.Row="1" Grid.Column="0" Margin="4" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold">Title</TextBlock>
						<TextBox Grid.Row="1" Grid.Column="1" Margin="4" Text="{Binding Title}" Name="txtSettingProjectTitle" TextChanged="txtSettingAuthor_TextChanged" />

						<TextBlock Grid.Row="2" Grid.Column="0" Margin="4" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold">Version</TextBlock>
						<TextBox Grid.Row="2" Grid.Column="1" Margin="4" Text="{Binding Version}" Name="txtSettingVersion" TextChanged="txtSettingAuthor_TextChanged" />
					</Grid>
				</Border>
			</Popup>
		</StackPanel>
	</Grid>
</Window>
